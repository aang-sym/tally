/* tslint:disable */
/* eslint-disable */
/**
 * Tally API
 * Minimal OpenAPI surface for watchlist v2. Expand with real schemas per route as we iterate.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Provider } from './Provider';
import {
    ProviderFromJSON,
    ProviderFromJSONTyped,
    ProviderToJSON,
    ProviderToJSONTyped,
} from './Provider';

/**
 * 
 * @export
 * @interface SetProviderRequest
 */
export interface SetProviderRequest {
    /**
     * 
     * @type {Provider}
     * @memberof SetProviderRequest
     */
    provider: Provider;
    /**
     * 
     * @type {string}
     * @memberof SetProviderRequest
     */
    country?: string | null;
}

/**
 * Check if a given object implements the SetProviderRequest interface.
 */
export function instanceOfSetProviderRequest(value: object): value is SetProviderRequest {
    if (!('provider' in value) || value['provider'] === undefined) return false;
    return true;
}

export function SetProviderRequestFromJSON(json: any): SetProviderRequest {
    return SetProviderRequestFromJSONTyped(json, false);
}

export function SetProviderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetProviderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': ProviderFromJSON(json['provider']),
        'country': json['country'] == null ? undefined : json['country'],
    };
}

export function SetProviderRequestToJSON(json: any): SetProviderRequest {
    return SetProviderRequestToJSONTyped(json, false);
}

export function SetProviderRequestToJSONTyped(value?: SetProviderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider': ProviderToJSON(value['provider']),
        'country': value['country'],
    };
}

