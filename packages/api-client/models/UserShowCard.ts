/* tslint:disable */
/* eslint-disable */
/**
 * Tally API
 * Minimal OpenAPI surface for watchlist v2. Expand with real schemas per route as we iterate.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Progress } from './Progress';
import {
    ProgressFromJSON,
    ProgressFromJSONTyped,
    ProgressToJSON,
    ProgressToJSONTyped,
} from './Progress';
import type { Provider } from './Provider';
import {
    ProviderFromJSON,
    ProviderFromJSONTyped,
    ProviderToJSON,
    ProviderToJSONTyped,
} from './Provider';

/**
 * 
 * @export
 * @interface UserShowCard
 */
export interface UserShowCard {
    /**
     * 
     * @type {string}
     * @memberof UserShowCard
     */
    userShowId: string;
    /**
     * 
     * @type {string}
     * @memberof UserShowCard
     */
    showId: string;
    /**
     * 
     * @type {number}
     * @memberof UserShowCard
     */
    tmdbId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserShowCard
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof UserShowCard
     */
    countryCode?: string | null;
    /**
     * 
     * @type {Provider}
     * @memberof UserShowCard
     */
    streamingProvider?: Provider;
    /**
     * 
     * @type {Progress}
     * @memberof UserShowCard
     */
    progress?: Progress;
}

/**
 * Check if a given object implements the UserShowCard interface.
 */
export function instanceOfUserShowCard(value: object): value is UserShowCard {
    if (!('userShowId' in value) || value['userShowId'] === undefined) return false;
    if (!('showId' in value) || value['showId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function UserShowCardFromJSON(json: any): UserShowCard {
    return UserShowCardFromJSONTyped(json, false);
}

export function UserShowCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserShowCard {
    if (json == null) {
        return json;
    }
    return {
        
        'userShowId': json['user_show_id'],
        'showId': json['show_id'],
        'tmdbId': json['tmdb_id'] == null ? undefined : json['tmdb_id'],
        'title': json['title'],
        'countryCode': json['country_code'] == null ? undefined : json['country_code'],
        'streamingProvider': json['streaming_provider'] == null ? undefined : ProviderFromJSON(json['streaming_provider']),
        'progress': json['progress'] == null ? undefined : ProgressFromJSON(json['progress']),
    };
}

export function UserShowCardToJSON(json: any): UserShowCard {
    return UserShowCardToJSONTyped(json, false);
}

export function UserShowCardToJSONTyped(value?: UserShowCard | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_show_id': value['userShowId'],
        'show_id': value['showId'],
        'tmdb_id': value['tmdbId'],
        'title': value['title'],
        'country_code': value['countryCode'],
        'streaming_provider': ProviderToJSON(value['streamingProvider']),
        'progress': ProgressToJSON(value['progress']),
    };
}

